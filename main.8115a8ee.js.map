{"version":3,"sources":["scripts/messages.json","scripts/main.js"],"names":["module","exports","title","description","type","document","body","style","alignItems","table","querySelector","tHead","headings","rows","cells","tableBody","workersData","tBodies","notification","createPush","checker","checkClick","messages","require","pushEmptyFields","pushInvalidNameText","pushInvalidNameLength","pushInvalidPosition","pushInvalidAge","pushSuccessAdd","pushEmptyCell","pushCellNotNumber","pushCellSaved","pushCellNotString","pushCellWrongOffice","forEach","el","cell","userSelect","Employee","fullName","position","office","age","salary","name","getSalaryNum","str","slice","split","join","employees","map","getWorkerInfo","addEventListener","clickEvent","target","condition","innerText","toLowerCase","color","innerHTML","sort","getSalaryStr","contains","classList","toggle","closest","remove","form","createElement","add","append","officeCities","formInputs","input","addInput","workerData","workers","value","orderASC","value1","a","b","localeCompare","action","counter","messageContainer","className","dataset","qa","querySelectorAll","length","top","getBoundingClientRect","height","setTimeout","num","toString","replace","inputName","inputType","label","after","select","city","Option","button","submitEvent","preventDefault","data","elements","newRow","some","match","i","reset","initialValue","focus","isAge","cellIndex","isSalary","isName","isOffice","isStringField","changeCellContent","pushMessage","saveEditedField","includes","onblur","onkeydown","keyboardEvent","code"],"mappings":"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","file":"main.8115a8ee.js","sourceRoot":"../src","sourcesContent":["module.exports=[{title:\"All fields are required!\",description:\"Please, fill out all form fields!\",type:\"error\"},{title:\"Invalid name!\",description:\"Name must contain only English alphabet characters or spaces\",type:\"error\"},{title:\"Invalid name!\",description:\"Name must not be shorter than 4 characters\",type:\"error\"},{title:\"Invalid position name!\",description:\"Position name must contain only English alphabet characters or spaces\",type:\"error\"},{title:\"Invalid age!\",description:\"Please, insert correct age\",type:\"error\"},{title:\"Data added!\",description:\"New employee successfully added to the table\",type:\"success\"},{title:\"Empty Field!\",description:\"Field is empty! Data didn't saved\",type:\"error\"},{title:\"Not a number!\",description:\"Please, insert a number\",type:\"error\"},{title:\"Data saved!\",description:\"Information is refreshed!\",type:\"success\"},{title:\"Invalid data!\",description:\"Data must contain only English alphabet characters or spaces\",type:\"error\"},{title:\"Invalid data!\",description:\"Office in this city doesn't exist\",type:\"error\"}];","'use strict';\n\ndocument.body.style.alignItems = 'flex-start';\n\nconst table = document.querySelector('table');\nconst tHead = table.tHead;\nconst headings = [...tHead.rows[0].cells];\nconst tableBody = document.querySelector('tbody');\nconst workersData = () => [...table.tBodies[0].rows];\n\nconst notification = createPush();\nconst checker = checkClick();\n\nconst messages = require('./messages.json');\n\nconst [\n  pushEmptyFields,\n  pushInvalidNameText,\n  pushInvalidNameLength,\n  pushInvalidPosition,\n  pushInvalidAge,\n  pushSuccessAdd,\n  pushEmptyCell,\n  pushCellNotNumber,\n  pushCellSaved,\n  pushCellNotString,\n  pushCellWrongOffice,\n] = messages;\n\nworkersData().forEach(el => {\n  [...el.cells].forEach(cell => {\n    cell.style.userSelect = 'none';\n  });\n});\n\nclass Employee {\n  constructor(fullName, position, office, age, salary) {\n    this.name = fullName;\n    this.position = position;\n    this.office = office;\n    this.age = +age;\n    this.salary = this.getSalaryNum(salary);\n  }\n\n  getSalaryNum(str) {\n    return +str.slice(1).split(',').join('');\n  }\n}\n\nconst employees = () => workersData().map(el => {\n  const [\n    fullName,\n    position,\n    office,\n    age,\n    salary,\n  ] = getWorkerInfo([...el.cells]);\n\n  return new Employee(fullName, position, office, age, salary);\n});\n\ntHead.addEventListener('click', (clickEvent) => {\n  const target = clickEvent.target;\n  const condition = target.innerText.toLowerCase();\n\n  headings.forEach(el => {\n    if (el === target) {\n      el.style.color = '#fff400';\n    } else {\n      el.style.color = '#fff';\n    }\n  });\n\n  tableBody.innerHTML = `\n  ${sort(employees(), condition, checker(condition)).map(el => `\n    <tr>\n      <td>${el.name}</td>\n      <td>${el.position}</td>\n      <td>${el.office}</td>\n      <td>${el.age}</td>\n      <td>${getSalaryStr(el.salary)}</td>\n    </tr>\n  `).join('')}\n  `;\n});\n\ntableBody.addEventListener('click', clickEvent => {\n  const target = clickEvent.target;\n\n  workersData().forEach(el => {\n    if (el.contains(target)) {\n      el.classList.toggle('active');\n    } else {\n      el.closest('tr').classList.remove('active');\n    }\n  });\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\ndocument.body.append(form);\n\nconst officeCities = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\nconst formInputs = [\n  ['Name', 'text'],\n  ['Position', 'text'],\n  ['Age', 'number'],\n  ['Salary', 'number'],\n];\n\nfor (const [input, type] of formInputs) {\n  form.append(addInput(input, type));\n}\n\nform.querySelector(':nth-child(2)').after((() => {\n  const label = document.createElement('label');\n  const select = document.createElement('select');\n\n  label.innerText = 'Office: ';\n  label.append(select);\n\n  select.name = 'office';\n  select.dataset.qa = 'office';\n\n  for (const city of officeCities) {\n    select.append(new Option(city, city));\n  }\n\n  return label;\n})());\n\nform.append((() => {\n  const button = document.createElement('button');\n\n  button.type = 'submit';\n  button.innerText = 'Save to table';\n\n  return button;\n})());\n\nform.addEventListener('submit', (submitEvent) => {\n  submitEvent.preventDefault();\n\n  const data = [...form.elements].map(el => el.value).slice(0, -1);\n  const newRow = document.createElement('tr');\n\n  if (data.some(input => !input)) {\n    notification(pushEmptyFields);\n\n    return;\n  }\n\n  if (!data[0].match(/^[a-zA-Z ]*$/g)) {\n    notification(pushInvalidNameText);\n\n    return;\n  }\n\n  if (data[0].length < 4) {\n    notification(pushInvalidNameLength);\n\n    return;\n  }\n\n  if (!data[1].match(/^[a-zA-Z ]*$/g)) {\n    notification(pushInvalidPosition);\n\n    return;\n  }\n\n  if (+data[3] < 18 || +data[3] > 90) {\n    notification(pushInvalidAge);\n\n    return;\n  }\n\n  tableBody.append(newRow);\n\n  data.forEach((input, i) => {\n    const cell = document.createElement('td');\n\n    if (i === 4) {\n      cell.innerText = getSalaryStr(input);\n    } else {\n      cell.innerText = input;\n    }\n\n    newRow.append(cell);\n  });\n\n  notification(pushSuccessAdd);\n\n  form.reset();\n});\n\ntableBody.addEventListener('dblclick', clickEvent => {\n  const target = clickEvent.target;\n\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.type = 'text';\n  input.name = 'cellInput';\n\n  const initialValue = target.innerText;\n\n  target.innerText = '';\n  target.append(input);\n  input.focus();\n\n  const isAge = target.cellIndex === 3;\n  const isSalary = target.cellIndex === 4;\n  const isName = target.cellIndex === 0;\n  const isOffice = target.cellIndex === 2;\n  const isStringField = target.cellIndex === 0\n    || target.cellIndex === 1;\n\n  function changeCellContent(pushMessage, value = initialValue) {\n    target.innerText = value;\n    notification(pushMessage);\n    input.remove();\n  }\n\n  function saveEditedField() {\n    if (!input.value) {\n      changeCellContent(pushEmptyCell);\n\n      return;\n    }\n\n    if ((isAge || isSalary) && !input.value.match(/[0-9]/)) {\n      changeCellContent(pushCellNotNumber);\n\n      return;\n    }\n\n    if (isStringField && input.value.match(/[0-9]/)) {\n      changeCellContent(pushCellNotString);\n\n      return;\n    }\n\n    if (isSalary && input.value.match(/[0-9]/)) {\n      changeCellContent(pushCellSaved, getSalaryStr(input.value));\n\n      return;\n    }\n\n    if (isName && input.value.length < 4) {\n      changeCellContent(pushInvalidNameLength);\n\n      return;\n    }\n\n    if (isName && !input.value.match(/^[a-zA-Z ]*$/g)) {\n      changeCellContent(pushInvalidNameText);\n\n      return;\n    }\n\n    if (isAge && (+input.value < 18 || +input.value > 90)) {\n      changeCellContent(pushInvalidAge);\n\n      return;\n    }\n\n    if (isOffice && !officeCities.includes(input.value)) {\n      changeCellContent(pushCellWrongOffice);\n\n      return;\n    }\n\n    changeCellContent(pushCellSaved, input.value);\n  }\n\n  input.onblur = () => {\n    saveEditedField();\n  };\n\n  input.onkeydown = (keyboardEvent) => {\n    const isEnter = keyboardEvent.code === 'Enter';\n\n    if (isEnter) {\n      saveEditedField();\n    }\n  };\n});\n\nfunction getWorkerInfo(workerData) {\n  return workerData.map(el => el.innerText);\n}\n\nfunction sort(workers, value, orderASC) {\n  return workers.sort(\n    ({ [value]: value1 }, { [value]: value2 }) => {\n      let [a, b] = [value1, value2];\n\n      if (!orderASC) {\n        [a, b] = [b, a];\n      }\n\n      return typeof a === 'string'\n        ? a.localeCompare(b)\n        : a - b;\n    }\n  );\n}\n\nfunction checkClick() {\n  let action = '';\n  let orderASC = false;\n\n  return function(value) {\n    if (!action || action === value) {\n      orderASC = !orderASC;\n      action = value;\n    } else {\n      action = value;\n      orderASC = true;\n    }\n\n    return orderASC;\n  };\n}\n\nfunction createPush() {\n  let counter = 0;\n\n  return function({ title, description, type }) {\n    const messageContainer = document.createElement('div');\n\n    messageContainer.className = `notification ${type}`;\n    document.body.append(messageContainer);\n    messageContainer.dataset.qa = 'notification';\n\n    messageContainer.innerHTML = `\n      <h2 class=\"title\">\n        ${title}\n      </h2>\n\n      <p>\n        ${description}\n      </p>\n    `;\n\n    if ([...document.querySelectorAll('div')].length === 1) {\n      counter = 0;\n    }\n\n    if (!counter) {\n      counter++;\n    } else {\n      messageContainer.style.top = `\n      ${(20 * counter)\n        + messageContainer.getBoundingClientRect().height\n        * (counter)}px\n    `;\n      counter++;\n    }\n\n    setTimeout(() => messageContainer.remove(), 2000);\n  };\n}\n\nfunction getSalaryStr(num) {\n  return '$' + num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction addInput(inputName, inputType) {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n\n  label.innerText = inputName + ': ';\n  input.type = inputType;\n  input.name = inputName.toLowerCase();\n  input.dataset.qa = inputName.toLowerCase();\n\n  label.append(input);\n\n  return label;\n}\n"]}